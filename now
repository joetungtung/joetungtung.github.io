def write_to_influx(df: pd.DataFrame) -> bool:
    if df.empty:
        print("[INFO] nothing to write.")
        return True
    try:
        # 分批設定
        BATCH_SIZE = 10000

        # 只留安全欄位
        safe_numeric_fields = ["bytes_in", "bytes_out", "src_port", "dst_port", "flex_num1", "count"]
        keep_cols = ["event_ts"] + [c for c in TAG_COLS if c in df.columns] + [c for c in safe_numeric_fields if c in df.columns]
        df = df.loc[:, [c for c in keep_cols if c in df.columns]].copy()

        # 數值欄位轉換 + drop 全空
        for c in safe_numeric_fields:
            if c in df.columns:
                df[c] = pd.to_numeric(df[c], errors="coerce")
        df = df.dropna(subset=[c for c in safe_numeric_fields if c in df.columns], how="all")
        df = _sanitize_for_influx(df)

        with InfluxDBClient(url=INFLUX_URL, org=ORG, token=TOKEN, timeout=120_000) as cli:
            w = cli.write_api(write_options=SYNCHRONOUS)
            for start in range(0, len(df), BATCH_SIZE):
                chunk = df.iloc[start:start+BATCH_SIZE]
                w.write(
                    bucket=BUCKET,
                    org=ORG,
                    record=chunk,
                    data_frame_measurement_name=MEAS,
                    data_frame_tag_columns=[c for c in TAG_COLS if c in chunk.columns],
                    data_frame_timestamp_column="event_ts",
                )
                print(f"[OK] wrote chunk rows {start}-{start+len(chunk)}")

        print(f"[OK] wrote total {len(df)} rows to {BUCKET}/{MEAS}")
        return True
    except Exception as e:
        print(f"[ERROR] write influx failed: {e}")
        return False