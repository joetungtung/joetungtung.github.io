import "influxdata/influxdb/schema"

// 先把資料轉成欄、型別，並判斷是否有座標
base =
  from(bucket: "SOC")
    |> range(start: -12h)
    |> filter(fn: (r) => r._measurement == "arcsight_event")
    |> schema.fieldsAsCols()
    |> keep(columns: [
      "_time",
      "attacker_geo_country_name", "target_geo_country_name",
      "src_lat", "src_lon", "dst_lat", "dst_lon"
    ])
    |> map(fn: (r) => ({
      r with
      src_lat_f: float(v: r.src_lat),
      src_lon_f: float(v: r.src_lon),
      dst_lat_f: float(v: r.dst_lat),
      dst_lon_f: float(v: r.dst_lon),
    }))
    |> map(fn: (r) => ({
      r with
      src_ok: (exists r.src_lat_f and exists r.src_lon_f and r.src_lat_f != 0.0 and r.src_lon_f != 0.0),
      dst_ok: (exists r.dst_lat_f and exists r.dst_lon_f and r.dst_lat_f != 0.0 and r.dst_lon_f != 0.0),
    }))

// 1) 缺「來源座標」的國家清單（依缺失筆數排序）
base
  |> filter(fn: (r) => not r.src_ok)
  |> group(columns: ["attacker_geo_country_name"], mode: "by")
  |> reduce(
      identity: {country: "", missing_events: 0.0},
      fn: (r, acc) => ({
        country: r.attacker_geo_country_name,
        missing_events: acc.missing_events + 1.0
      })
    )
  |> sort(columns: ["missing_events"], desc: true)
  |> yield(name: "missing_src_countries")

// 2) 缺「目的座標」的國家清單（依缺失筆數排序）
base
  |> filter(fn: (r) => not r.dst_ok)
  |> group(columns: ["target_geo_country_name"], mode: "by")
  |> reduce(
      identity: {country: "", missing_events: 0.0},
      fn: (r, acc) => ({
        country: r.target_geo_country_name,
        missing_events: acc.missing_events + 1.0
      })
    )
  |> sort(columns: ["missing_events"], desc: true)
  |> yield(name: "missing_dst_countries")