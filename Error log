from(bucket: "SOC")
  |> range(start: -24h)
  |> filter(fn: (r) => r._measurement == "arcsight_event")
  |> limit(n: 5)



m = "arcsight_event"

d = from(bucket: "SOC")
  |> range(start: 0)
  |> filter(fn: (r) => r._measurement == m)
  |> keep(columns: ["_time"])
  |> group()

d |> first() |> yield(name: "first_time")
d |> last()  |> yield(name: "last_time")




from(bucket: "SOC")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r._measurement == "arcsight_event")
  |> filter(fn: (r) => r._field == "count")
  |> map(fn: (r) => ({ r with _value: float(v: r._value) }))
  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)
  |> group(columns: ["device_name"])
  |> yield(name: "event_rate")




from(bucket: "SOC")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r._measurement == "arcsight_event")
  |> filter(fn: (r) => r._field == "count")
  |> group(columns: ["rule_name"])
  |> sum(column: "_value")
  |> sort(columns: ["_value"], desc: true)
  |> limit(n: 10)




from(bucket: "SOC")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r._measurement == "arcsight_event")
  |> filter(fn: (r) => r._field == "count")
  |> group(columns: ["Attacker Geo Country Name"])
  |> sum(column: "_value")
  |> rename(columns: { "Attacker Geo Country Name": "country" })
  |> yield(name: "geo_country")




from(bucket: "SOC")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r._measurement == "arcsight_event")
  |> filter(fn: (r) => r._field == "count")
  |> group(columns: ["Agent Name"])
  |> sum(column: "_value")
  |> sort(columns: ["_value"], desc: true)
