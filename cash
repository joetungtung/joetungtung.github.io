<!doctype html>
<html lang="zh-Hant">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>情侶簡易記帳</title>
  <style>
    :root { --gap:12px; --radius:10px; }
    body { font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Noto Sans TC", sans-serif; margin: 0; background:#f6f7fb; color:#222; }
    header { padding:20px; background:#fff; position:sticky; top:0; border-bottom:1px solid #eee; }
    h1 { margin:0 0 8px; font-size:20px; }
    .row { display:flex; gap:var(--gap); flex-wrap:wrap; }
    .card { background:#fff; border:1px solid #eee; border-radius:var(--radius); padding:12px; }
    .form { margin:16px; }
    input, select, button, textarea {
      font: inherit; padding:10px; border:1px solid #ddd; border-radius:8px; background:#fff;
    }
    button { cursor:pointer; }
    table { width:100%; border-collapse: collapse; }
    th, td { padding:10px; border-bottom:1px solid #eee; text-align:left; }
    tr:hover { background:#fafafa; }
    .right { text-align:right; }
    .muted { color:#666; font-size:12px; }
    .pill { background:#f0f3ff; padding:4px 8px; border-radius:999px; font-size:12px; }
    .wrap { max-width:1000px; margin: 0 auto; }
    .spacer { height:10px; }
  </style>
</head>
<body>
  <header>
    <div class="wrap">
      <h1>情侶簡易記帳</h1>
      <div class="row">
        <input id="coupleCode" placeholder="情侶代碼（例如：J&L2025）" />
        <input id="me" placeholder="我的暱稱（例如：Joe）" />
        <select id="monthSelect"></select>
        <button id="newMonthBtn">本月</button>
        <button id="exportBtn">匯出(JSON)</button>
        <button id="exportCsvBtn">匯出(CSV)</button>
        <label class="pill">
          匯入(JSON)
          <input id="importInput" type="file" accept="application/json" style="display:none" />
        </label>
      </div>
      <div class="muted" id="hint"></div>
    </div>
  </header>

  <main class="wrap">
    <section class="form card">
      <div class="row">
        <input id="date" type="date" />
        <input id="category" placeholder="分類（餐飲、交通…）" />
        <input id="note" placeholder="備註（可空白）" />
        <input id="amount" type="number" step="0.01" placeholder="金額" />
        <select id="payer">
          <option value="">付款人（我/對方）</option>
        </select>
        <button id="addBtn">新增</button>
        <button id="clearBtn" title="刪除本月所有紀錄（需再次確認）">清空本月</button>
      </div>
      <div class="muted">提示：兩人裝置皆輸入同一組「情侶代碼」，即可共用同一份資料命名空間（不互相覆蓋備份檔）。</div>
    </section>

    <section class="card">
      <div class="row">
        <div id="summaryMe" class="pill"></div>
        <div id="summaryPartner" class="pill"></div>
        <div id="summaryTotal" class="pill"></div>
        <div id="summarySettle" class="pill"></div>
      </div>
    </section>

    <section class="card">
      <table id="table">
        <thead>
          <tr>
            <th style="width:110px">日期</th>
            <th>分類</th>
            <th>備註</th>
            <th class="right" style="width:120px">金額</th>
            <th style="width:90px">付款人</th>
            <th style="width:70px"></th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <div class="muted">點「🗑️」可刪除單筆。</div>
    </section>
    <div class="spacer"></div>
  </main>

<script>
(() => {
  // ---- Utilities ----
  const $ = (id) => document.getElementById(id);
  const formatMoney = (n) => (Number(n)||0).toLocaleString(undefined,{minimumFractionDigits:2, maximumFractionDigits:2});
  const ymKey = (d) => {
    const dt = new Date(d);
    return `${dt.getFullYear()}-${String(dt.getMonth()+1).padStart(2,'0')}`;
  };
  const today = () => new Date().toISOString().slice(0,10);

  // ---- State ----
  const state = {
    coupleCode: localStorage.getItem('cb_coupleCode') || '',
    me: localStorage.getItem('cb_me') || '',
    month: localStorage.getItem('cb_month') || ymKey(new Date()),
    records: [], // {id, date, category, note, amount, payer}
  };

  // ---- Storage key by couple & month ----
  const k = () => `CB::${state.coupleCode || 'default'}::${state.month}`;

  // ---- Load & Save ----
  function load() {
    try {
      state.records = JSON.parse(localStorage.getItem(k()) || '[]');
    } catch {
      state.records = [];
    }
  }
  function save() {
    localStorage.setItem(k(), JSON.stringify(state.records));
  }

  // ---- UI Init ----
  function initUI() {
    $('coupleCode').value = state.coupleCode;
    $('me').value = state.me;
    $('date').value = today();
    fillMonthSelect();
    fillPayer();
    updateHint();
    render();
  }

  function updateHint() {
    $('hint').textContent = `命名空間：${state.coupleCode || 'default'}　月份：${state.month}`;
  }

  function fillMonthSelect() {
    const sel = $('monthSelect');
    sel.innerHTML = '';
    // 產生最近 12 個月份選項（含本月）
    const base = new Date();
    for (let i=0; i<12; i++) {
      const d = new Date(base.getFullYear(), base.getMonth()-i, 1);
      const ym = ymKey(d);
      const opt = document.createElement('option');
      opt.value = ym; opt.textContent = ym;
      if (ym === state.month) opt.selected = true;
      sel.appendChild(opt);
    }
  }

  function fillPayer() {
    const sel = $('payer');
    const me = state.me || '我';
    const partner = '對方';
    sel.innerHTML = '';
    [['', '付款人（我/對方）'], [me, me], [partner, partner]].forEach(([v,t])=>{
      const opt = document.createElement('option');
      opt.value = v; opt.textContent = t;
      sel.appendChild(opt);
    });
  }

  // ---- Rendering ----
  function render() {
    const tbody = $('table').querySelector('tbody');
    tbody.innerHTML = '';
    let sumMe = 0, sumPartner = 0, total = 0;
    state.records
      .slice()
      .sort((a,b)=> a.date.localeCompare(b.date))
      .forEach(rec => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${rec.date}</td>
          <td>${escapeHtml(rec.category||'')}</td>
          <td>${escapeHtml(rec.note||'')}</td>
          <td class="right">$ ${formatMoney(rec.amount)}</td>
          <td>${escapeHtml(rec.payer||'')}</td>
          <td><button data-id="${rec.id}" class="delBtn" title="刪除">🗑️</button></td>
        `;
        tbody.appendChild(tr);
        total += Number(rec.amount)||0;
        if (rec.payer === (state.me || '我')) sumMe += Number(rec.amount)||0;
        else sumPartner += Number(rec.amount)||0;
      });
    // 結清建議（AA）
    const half = total/2;
    let settle = '';
    if (sumMe > half) {
      settle = `建議：對方向你付 $ ${formatMoney(sumMe - half)}`;
    } else if (sumPartner > half) {
      settle = `建議：你付給對方 $ ${formatMoney(sumPartner - half)}`;
    } else {
      settle = '已均分';
    }
    $('summaryMe').textContent = `我支付：$ ${formatMoney(sumMe)}`;
    $('summaryPartner').textContent = `對方支付：$ ${formatMoney(sumPartner)}`;
    $('summaryTotal').textContent = `本月合計：$ ${formatMoney(total)}`;
    $('summarySettle').textContent = settle;
    // 綁定刪除
    tbody.querySelectorAll('.delBtn').forEach(btn=>{
      btn.addEventListener('click', () => {
        const id = btn.getAttribute('data-id');
        state.records = state.records.filter(r => r.id !== id);
        save(); render();
      });
    });
  }

  function escapeHtml(s){
    return String(s).replace(/[&<>"']/g, m=>({ '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;' }[m]));
  }

  // ---- Add record ----
  function addRecord() {
    const date = $('date').value || today();
    const category = $('category').value.trim();
    const note = $('note').value.trim();
    const amount = parseFloat($('amount').value);
    const payer = $('payer').value || (state.me||'我');
    if (!Number.isFinite(amount) || amount <= 0) {
      alert('請輸入正確金額');
      return;
    }
    const rec = {
      id: crypto.randomUUID(),
      date, category, note, amount, payer
    };
    state.records.push(rec);
    save();
    $('note').value = '';
    $('amount').value = '';
    render();
  }

  // ---- Export / Import ----
  function exportJson() {
    const blob = new Blob([JSON.stringify({coupleCode: state.coupleCode, month: state.month, records: state.records}, null, 2)], {type:'application/json'});
    const a = document.createElement('a');
    a.href = URL.createObjectURL(blob);
    a.download = `couple-budget_${state.coupleCode||'default'}_${state.month}.json`;
    a.click();
  }
  function exportCsv() {
    const rows = [['日期','分類','備註','金額','付款人']];
    state.records.forEach(r=>{
      rows.push([r.date, r.category||'', r.note||'', (Number(r.amount)||0).toString(), r.payer||'']);
    });
    const csv = rows.map(r=>r.map(v=>`"${String(v).replace(/"/g,'""')}"`).join(',')).join('\n');
    const blob = new Blob([csv], {type:'text/csv;charset=utf-8'});
    const a = document.createElement('a');
    a.href = URL.createObjectURL(blob);
    a.download = `couple-budget_${state.coupleCode||'default'}_${state.month}.csv`;
    a.click();
  }
  function importJson(file) {
    if (!file) return;
    const reader = new FileReader();
    reader.onload = () => {
      try {
        const data = JSON.parse(reader.result);
        if (!Array.isArray(data.records)) throw new Error('格式錯誤');
        // 直接覆蓋當月資料（同命名空間）
        state.records = data.records;
        save(); render();
        alert('匯入完成（已覆蓋本月資料）。');
      } catch (e) {
        alert('匯入失敗：' + e.message);
      }
    };
    reader.readAsText(file);
  }

  // ---- Clear month ----
  function clearMonth() {
    if (!confirm(`確定要刪除「${state.month}」所有紀錄嗎？此動作無法復原。`)) return;
    state.records = [];
    save(); render();
  }

  // ---- Events ----
  $('addBtn').addEventListener('click', addRecord);
  $('exportBtn').addEventListener('click', exportJson);
  $('exportCsvBtn').addEventListener('click', exportCsv);
  $('importInput').addEventListener('change', (e)=> importJson(e.target.files[0]));
  $('clearBtn').addEventListener('click', clearMonth);
  $('monthSelect').addEventListener('change', (e)=>{
    state.month = e.target.value;
    localStorage.setItem('cb_month', state.month);
    load(); updateHint(); render();
  });
  $('newMonthBtn').addEventListener('click', ()=>{
    state.month = ymKey(new Date());
    localStorage.setItem('cb_month', state.month);
    fillMonthSelect(); load(); updateHint(); render();
  });
  $('coupleCode').addEventListener('change', (e)=>{
    state.coupleCode = e.target.value.trim();
    localStorage.setItem('cb_coupleCode', state.coupleCode);
    load(); updateHint(); render();
  });
  $('me').addEventListener('change', (e)=>{
    state.me = e.target.value.trim();
    localStorage.setItem('cb_me', state.me);
    fillPayer(); render();
  });

  // ---- Boot ----
  load(); initUI();
})();
</script>
</body>
</html>