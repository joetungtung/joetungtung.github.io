import "influxdata/influxdb/schema"

// === 按國家統計：哪裡缺經緯度（src 與 dst 分開） ===
// 依你的實際欄位：attacker_geo_country_name / target_geo_country_name / src_lat / src_lon / dst_lat / dst_lon

src_missing =
from(bucket: "SOC")
  |> range(start: -12h)
  |> filter(fn: (r) => r._measurement == "arcsight_event")
  // 攤平成每列含所有欄位，避免 _field 篩掉資料
  |> schema.fieldsAsCols()
  // 只統計有國家資訊的列（避免空字串）
  |> filter(fn: (r) => exists r.attacker_geo_country_name and r.attacker_geo_country_name != "")
  // 任一經/緯度不存在就記 1
  |> map(fn: (r) => ({ r with _flag: if (exists r.src_lat and exists r.src_lon) then 0 else 1, _country: r.attacker_geo_country_name }))
  |> group(columns: ["_country"])
  |> sum(column: "_flag")
  |> rename(columns: {_flag: "missing_count"})
  |> map(fn: (r) => ({ country: r._country, role: "src", missing_count: r.missing_count }))
  |> keep(columns: ["country","role","missing_count"])

dst_missing =
from(bucket: "SOC")
  |> range(start: -12h)
  |> filter(fn: (r) => r._measurement == "arcsight_event")
  |> schema.fieldsAsCols()
  |> filter(fn: (r) => exists r.target_geo_country_name and r.target_geo_country_name != "")
  |> map(fn: (r) => ({ r with _flag: if (exists r.dst_lat and exists r.dst_lon) then 0 else 1, _country: r.target_geo_country_name }))
  |> group(columns: ["_country"])
  |> sum(column: "_flag")
  |> rename(columns: {_flag: "missing_count"})
  |> map(fn: (r) => ({ country: r._country, role: "dst", missing_count: r.missing_count }))
  |> keep(columns: ["country","role","missing_count"])

union(tables: [src_missing, dst_missing])
  |> sort(columns: ["missing_count","country","role"], desc: true)
  |> limit(n: 200)