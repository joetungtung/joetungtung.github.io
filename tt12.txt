import "influxdata/influxdb/schema"

base =
  from(bucket: "SOC")
    |> range(start: -12h)                                  // 視需要改時間窗
    |> filter(fn: (r) => r._measurement == "arcsight_event")
    |> schema.fieldsAsCols()                                // 把 field 變成欄位
    |> keep(columns: [
      "_time",
      "attacker_address","attacker_geo_country_name",
      "target_address","target_geo_country_name",
      "src_lat","src_lon","dst_lat","dst_lon"
    ])
    // 統一成 float（有些欄位可能是字串 "nan"）
    |> map(fn: (r) => ({
      r with
      src_lat: float(v: r.src_lat), src_lon: float(v: r.src_lon),
      dst_lat: float(v: r.dst_lat), dst_lon: float(v: r.dst_lon),
    }))
    // 標記哪一邊缺座標 & 為什麼
    |> map(fn: (r) => ({
      r with
      src_ok: (exists r.src_lat and exists r.src_lon and r.src_lat != 0.0 and r.src_lon != 0.0),
      dst_ok: (exists r.dst_lat and exists r.dst_lon and r.dst_lat != 0.0 and r.dst_lon != 0.0),
      reason:
        if not (exists r.src_lat and exists r.src_lon) then "missing src coords"
        else if not (exists r.dst_lat and exists r.dst_lon) then "missing dst coords"
        else if (r.src_lat == 0.0 or r.src_lon == 0.0) then "zero src coords"
        else if (r.dst_lat == 0.0 or r.dst_lon == 0.0) then "zero dst coords"
        else ""
    }))
    // 只列出有問題的那幾筆
    |> filter(fn: (r) => not r.src_ok or not r.dst_ok)
    |> keep(columns: [
      "_time",
      "attacker_address","attacker_geo_country_name",
      "target_address","target_geo_country_name",
      "src_lat","src_lon","dst_lat","dst_lon",
      "src_ok","dst_ok","reason"
    ])
    |> limit(n: 200)